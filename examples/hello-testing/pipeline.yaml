apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: go-test
  labels:
    app.kubernetes.io/version: "0.1"
spec:
  params:
    - name: dir
      default: examples/hello-testing
  workspaces:
    - name: source
  steps:
    - name: wait-for-connection
      image: ubuntu
      workingDir: $(workspaces.source.path)/$(params.dir)
      script: |
        ./wait-for-it.sh -t 0 localhost:27017 -- echo 'up'
    #    - name: pause
    #      image: docker
    #      args: [ "sleep", "6000" ]
    - name: go-test
      image: golang
      workingDir: $(workspaces.source.path)/$(params.dir)
      env:
        - name: MONGO_URI
          value: mongodb://admin:apple123@localhost:27017
      script: |
        go test -v .
  sidecars:
    - name: server
      image: docker:dind
      args:
        - --storage-driver=vfs
        - --debug
      securityContext:
        privileged: true
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: [ 'ls', '/certs/client/ca.pem' ]
    - name: docker-compose
      image: docker/compose
      env:
        # Connect to the sidecar over TCP, with TLS.
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        # Verify TLS.
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
      script: |
        cd $(workspaces.source.path)/$(params.dir)
        docker-compose -f docker-compose.yml up
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
        - name: $(workspaces.source.volume)
          mountPath: $(workspaces.source.path)
      readinessProbe:
        periodSeconds: 1
        exec:
          command: [ 'ls', '/certs/client/ca.pem' ]
  volumes:
    - name: dind-certs
      emptyDir: { }
---

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: go-test-pipeline
spec:
  workspaces:
    - name: git-source
    - name: ssh-creds
  tasks:
    - name: fetch-from-git
      taskRef:
        name: git-clone
      params:
        - name: url
          value: git@github.com:WLun001/cncf-demo.git
      workspaces:
        - name: output
          workspace: git-source
        - name: ssh-directory
          workspace: ssh-creds
    - name: run-test
      runAfter: [ fetch-from-git ]
      taskRef:
        name: go-test
      workspaces:
        - name: source
          workspace: git-source
